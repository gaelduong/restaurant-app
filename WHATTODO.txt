---------------------------------------------------------------------------------------------------***************************************************************************************************
---------------------------------------------------------------------------------------------------

----------------------------INTRODUCTION ---------------------------------------------------------

Idea for handeling clients on the backend ( USES python!): python application 

A small picture of what's happening on the backend:
client goes to sign up page and creates a user (assume this is a seller) 
contact info (username, name, email, pass,...)  gets sent to an sql server using slim
,in "parallel", the (newuser) post command intiates a bash script (depending on the OS that's running the server) that creates a directory for that user (users/username) that will include sub dirs such as ((users/username/profile_pic)) ((users/username/menu/menu_pics)), etc.
and will initialize a json file such as user.json (which will include all the current dishes with description of the dish, and would also link to the picture of that dish eg(..., "dish_pic" : "/menu/menu_pics/pizza.jpg",...)

(**more elaborate below**)

-assuming all the proper directories are created, we will use (python/java) programming to update the json contents of said files. Thus, we'd create our own database system by having the python/java framework update all the internal json documents

**(for java)- we'd need to use the scanner/writer and the json processing library in order to achieve this.

-the program will use external command argument from terminal to process what needs to be done.

 for example : "database.java saeed addDish $post_strings" would initialize a java program called database that would scan into users/saeed/user.json and then edit it with the new dishes 
and we could have "database.java saeed removeDish saeed $dishID" would access the user.json file and delete the dish by its id (which is a meta variable we create when we initialize the newDish)


---------------------------------------------------------------------------------------------------*************************************************************************************************** on it: PAULINE
---------------------------------------------------------------------------------------------------


What the newUser.shell file needs to do: 

-update the user directory with the new USER (keep in mind there is a users dir and a sellers dir)
-within user dir add a profile_pic dir and a menu_pic dir. it would also initialize the user.json file with username, adress, ...etc 

users/$user_name	user.json

			


sellers/$user_name	user.json

			/menu
					/menu_pics
			/profile_pic

---------------------------------------------------------------------------------------------------***************************************************************************************************  ON IT : ABHIJAY

---------------------------------------------------------------------------------------------------

what the python (or java ) program does is it handles json files      
***it could be a single or multiple program files
Functionality:
make dishes (would also create a UNIQUE dish_ID)
update dishes (updates by dishID)
get user (returns json) (or seller)
get dish (returns dish)
update users (updates by username) (or seller)
subscribe /subscriber updates
delete dishes (deletes by dishID) 
**!!! would also update the  global json files for adress based dishes (downtown, montreal) and for type based dishes (indian)

---------------------------------------------------------------------------------------------------***************************************************************************************************
---------------------------------------------------------------------------------------------------


technologies currently being used:
html
css
js
bash
xampp
php
sql
slim
ajax
security
PY/JSON DATABASE
py
json

(13)

